# coding: utf-8

"""
    JupyterHub

    The REST API for JupyterHub

    The version of the OpenAPI document: 4.0.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.request_identity import RequestIdentity

class TestRequestIdentity(unittest.TestCase):
    """RequestIdentity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RequestIdentity:
        """Test RequestIdentity
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RequestIdentity`
        """
        model = RequestIdentity()
        if include_optional:
            return RequestIdentity(
                name = '',
                admin = True,
                roles = [
                    ''
                    ],
                groups = [
                    ''
                    ],
                server = '',
                pending = 'spawn',
                last_activity = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                servers = {
                    'key' : openapi_client.models.server.Server(
                        name = '', 
                        ready = True, 
                        stopped = True, 
                        pending = 'spawn', 
                        url = '', 
                        progress_url = '', 
                        started = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_activity = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        state = openapi_client.models.state.state(), 
                        user_options = openapi_client.models.user_options.user_options(), )
                    },
                auth_state = openapi_client.models.auth_state.auth_state(),
                url = '',
                prefix = '',
                pid = 1.337,
                command = [
                    ''
                    ],
                info = openapi_client.models.info.info(),
                session_id = '',
                scopes = ["read:users","access:servers!user=name"]
            )
        else:
            return RequestIdentity(
        )
        """

    def testRequestIdentity(self):
        """Test RequestIdentity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
